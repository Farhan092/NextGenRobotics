@model NextGenRobotics.Models.User

@{
    ViewBag.Title = "Edit User";
}

<h2 class="text-center">Edit User</h2>

<div class="d-flex justify-content-center align-items-center" style="min-height: 80vh;">
    <div class="card p-4" style="width: 100%; max-width: 600px;">
        <div class="user-details text-center mb-4">
            <h3>@ViewBag.WelcomeMessage</h3>
            <div>
                @if (!string.IsNullOrEmpty(ViewBag.UserImage))
                {
                    <img src="@ViewBag.UserImage" alt="User Image" style="width:150px;height:150px;" class="img-thumbnail" />
                }
                else
                {
                    <img src="~/Images/default-user.png" alt="Default User Image" style="width:150px;height:150px;" class="img-thumbnail" />
                }
            </div>
        </div>

        @using (Html.BeginForm("Edit", "Users", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4 class="text-center mb-4">Edit User</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @Html.HiddenFor(model => model.UserId)

                <div class="form-group row">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4 text-right" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-4 text-right" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-4 text-right" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4 text-right" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-4 text-right" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-4 text-right" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.ImageUrl, "Upload Image", htmlAttributes: new { @class = "control-label col-md-4 text-right" })
                    <div class="col-md-8">
                        <input type="file" name="ImageFile" class="form-control" />
                    </div>
                </div>

                <br />

                <div class="form-group row">
                    <div class="form-group row">
                        <div class="col-md-12 text-center">
                            <input type="submit" value="Save" class="btn btn-primary mx-2" />
                            <a href="@Url.Action("ClearEdit", "Users")" class="btn btn-danger mx-2">Clear</a>
                        </div>
                    </div>

                </div>
            </div>
        }
    </div>
</div>

<div class="text-center mt-4">
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
